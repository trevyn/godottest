name: ci

on:
  push:
  pull_request:
  schedule: [cron: "40 8 * * *"]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  GODOT_VERSION: 4.1.2-stable

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - run: curl -v -o godot.zip -L https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_linux.x86_64.zip
  #     - run: unzip godot.zip
  #     - run: curl -v -o templates.zip -L https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_export_templates.tpz
  #     - run: unzip templates.zip "templates/macos.zip" "templates/windows_release_x86_64*" "templates/version.txt"
  #     - run: mkdir -v -p ~/.local/share/godot/templates/$(cat templates/version.txt)
  #     - run: mv templates/* ~/.local/share/godot/templates/$(cat templates/version.txt)/
  #     # - run: Godot.app/Contents/MacOS/Godot -v --export-release --headless "macOS" Godottest.dmg
  #     - run: ls -la

  assign:
    name: assign build_id
    runs-on: ubuntu-latest

    steps:
      - run: wget https://github.com/trevyn/animal-time/releases/latest/download/animal-time
      - run: chmod +x animal-time
      - run: ./animal-time > build_id
      - run: cat build_id

      - uses: actions/upload-artifact@v3
        with:
          name: build_id
          path: build_id

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - run: rustup default stable && rustup update stable

      - run: cargo build --release --target aarch64-apple-macos
        working-directory: "helloext"

      - run: curl -o godot.zip -L https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_macos.universal.zip
      - run: unzip godot.zip
      - run: curl -o templates.zip -L https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_export_templates.tpz
      - run: unzip templates.zip "templates/macos.zip" "templates/version.txt"
      - run: mkdir -v -p /Users/runner/Library/Application\ Support/Godot/export_templates/$(cat templates/version.txt)
      - run: mv templates/macos.zip /Users/runner/Library/Application\ Support/Godot/export_templates/$(cat templates/version.txt)/macos.zip
      - run: Godot.app/Contents/MacOS/Godot -v --export-release --headless "macOS" Godottest.dmg
      - run: ls -la

      - uses: actions/upload-artifact@v3
        with:
          name: Godottest.dmg
          path: Godottest.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - run: rustup default stable && rustup update stable

      - run: cargo build
        working-directory: "helloext"

      - run: curl -o godot.zip -L https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_win64.exe.zip
      - run: unzip godot.zip
      - run: curl -o templates.zip -L https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_export_templates.tpz
      - run: unzip templates.zip "templates/windows_release_x86_64*" "templates/version.txt"
      - run: mkdir -p C:/Users/runneradmin/AppData/Roaming/Godot/export_templates/$(cat templates/version.txt)
      - run: mv templates/windows_release_x86_64.exe C:/Users/runneradmin/AppData/Roaming/Godot/export_templates/$(cat templates/version.txt)/windows_release_x86_64.exe
      # - run: ./Godot_v${{env.GODOT_VERSION}}_win64_console.exe --help
      - run: ./Godot_v${{env.GODOT_VERSION}}_win64_console.exe -v --headless --export-release "Windows Desktop" ./Godottest.exe
      # - run: ./Godot_v${{env.GODOT_VERSION}}_win64.exe --help
      # - run: ./Godot_v${{env.GODOT_VERSION}}_win64.exe -v --headless --export-release "Windows Desktop" Godottest.exe
      - run: ls

      - uses: actions/upload-artifact@v3
        with:
          name: Godottest.exe
          path: Godottest.exe

  release:
    permissions:
      contents: write
    needs: [assign, build-macos, build-windows]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3

      - run: cat build_id/build_id

      - run: echo "BUILD_ID=$(cat build_id/build_id)" >> $GITHUB_ENV

      # - run: mv macos-latest-stable/$(basename macos-latest-stable/*) $(basename macos-latest-stable/*)-mac

      - run: ls

      # - run: |
      #     mv ubuntu-latest-nightly/Cargo.lock Cargo.lock
      #     mv ubuntu-latest-nightly/package-lock.json package-lock.json
      #     mv ubuntu-latest-nightly/target/x86_64-unknown-linux-gnu/release/$(basename ubuntu-latest-nightly/target/x86_64-unknown-linux-gnu/release/*) $(basename ubuntu-latest-nightly/target/x86_64-unknown-linux-gnu/release/*)-linux

      - run: gh release create ${{ env.BUILD_ID }} --target ${{ github.sha }} --generate-notes Godottest.dmg/Godottest.dmg Godottest.exe/Godottest.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
